<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>翁恺MOOC程序设计笔记</title>
    <link href="/2021/11/16/%E7%BF%81%E6%81%BAMOOC%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/11/16/%E7%BF%81%E6%81%BAMOOC%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h1><p>输入是以行为单位进行的，行的结束标志就是按下了回车键。在按下回车之前，程序不会读到任何东西。</p><p>变量：保存数据的地方。用一个变量保存了数据，它才能参加到后面的计算中去。<br><strong>变量定义的一般形式：&lt;类型名称&gt;&lt;变量名称&gt;;</strong><br>变量的名字是一种“<strong>标识符</strong>”，用来识别这个和那个的不同的名字。<br><strong>标识符基本构造原则</strong>：只能由字母，数字和下划线组成，数字不可以出现在第一个位置上，C语言的关键字（有的地方称为<strong>保留字</strong>）不可以用做标识符。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">auto</span>,<span class="hljs-keyword">break</span>,<span class="hljs-keyword">case</span>,<span class="hljs-keyword">char</span>,<span class="hljs-keyword">const</span>,<span class="hljs-keyword">continue</span>,<span class="hljs-keyword">default</span>,<br><span class="hljs-keyword">do</span>,<span class="hljs-keyword">double</span>,<span class="hljs-keyword">else</span>,<span class="hljs-keyword">enum</span>,<span class="hljs-keyword">extern</span>,<span class="hljs-keyword">float</span>,<span class="hljs-keyword">for</span>,<span class="hljs-keyword">goto</span>,<br><span class="hljs-keyword">if</span>,<span class="hljs-keyword">int</span>,<span class="hljs-keyword">long</span>,<span class="hljs-keyword">register</span>,<span class="hljs-keyword">return</span>,<span class="hljs-keyword">short</span>,<br><span class="hljs-keyword">signed</span>,<span class="hljs-keyword">sizeof</span>,<span class="hljs-keyword">static</span>,struct,<span class="hljs-keyword">switch</span>,<br><span class="hljs-keyword">typedef</span>,<span class="hljs-keyword">union</span>,<span class="hljs-keyword">unsigned</span>,<span class="hljs-keyword">void</span>,<span class="hljs-keyword">volatile</span>,<span class="hljs-keyword">while</span>,<br><span class="hljs-keyword">inline</span>,<span class="hljs-keyword">restrict</span><br></code></pre></td></tr></table></figure><p>(以上不需要背诵)<br>C语言没有强制要求变量在被定义时就初始化，但在第一次被使用之前应该被赋值一次。（如果没有初始化，则会随机出现奇怪的数值）<br><strong>变量初始化：&lt;类型名称&gt;&lt;变量名称&gt;=&lt;初始值&gt;;</strong><br><strong>表达式：有运算符的式子就叫做表达式。</strong><br>C99允许在程序的任何地方定义变量<br>传统ANSI C只能在代码开头的地方定义变量<br>固定不变的数，是常数。直接写在程序里，我们称作**直接量（literal)**。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//定义一个常量</span><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> AMOUNT = <span class="hljs-number">100</span>;<br></code></pre></td></tr></table></figure><p>const是一个修饰符，用来给这个变量加上一个const(不变的)的属性。<br>const属性表示这个变量的值一旦初始化，就不能再修改了。<br>若强行进行赋值操作，编译器会发现这个错误并且指出。</p><p>当浮点数和整数放在一起运算时，C会将整数转换成浮点数，然后进行浮点数的运算。<br>double双精度浮点数；float单精度浮点数</p><p>运算符(operator)是指进行运算的动作：加法运算符“+”，减法运算符“-”<br>算子(operand)指参与运算的值：常数，变量，某个方法的返回值</p><p><strong>运算符优先级</strong></p><table><thead><tr><th>优先级</th><th>运算符</th><th>运算</th><th>结合关系</th><th>举例</th></tr></thead><tbody><tr><td>1</td><td>+</td><td>单目不变</td><td>自右向左</td><td>a*+b</td></tr><tr><td>1</td><td>-</td><td>单目取负</td><td>自右向左</td><td>a*-b</td></tr><tr><td>2</td><td>*</td><td>乘</td><td>自左向右</td><td>a*b</td></tr><tr><td>2</td><td>/</td><td>除</td><td>自左向右</td><td>a/b</td></tr><tr><td>2</td><td>%</td><td>取余</td><td>自左向右</td><td>a%b</td></tr><tr><td>3</td><td>+</td><td>加</td><td>自左向右</td><td>a+b</td></tr><tr><td>3</td><td>-</td><td>减</td><td>自左向右</td><td>a-b</td></tr><tr><td>4</td><td>=</td><td>赋值</td><td>自右向左</td><td>a=b</td></tr></tbody></table><p>赋值运算符<br><strong>赋值也是运算，也有结果！</strong>a=6的结果是a被赋予的值，也就是6<br>不要用“嵌入式赋值”！！（不利于阅读，容易产生错误）</p><p>结合关系：一般自左向右（单目+-和赋值时自右向左）</p><p>设置断点：程序运行到断点时将会停止，不会执行被设为断点的那一行程序。（用来进行程序debug。）</p><p><strong>复合赋值</strong>：5个算术运算符，+-/%，可以和赋值运算符“=”结合起来，形成复合赋值运算符：“+=”，“-=”，“*=”，“/=”和“%=”（两个运算符中间不要有空格！）<br>例：total += 5;<br>        total = total + 5;</p><p><strong>递增递减运算符（++和–）</strong>：单目运算符，其算子必须是变量，作用是给这个变量+1或者-1。<br>前缀后缀：放在变量的前面叫做前缀形式，放在变量后面叫做后缀形式。<br><strong>a++的值是a加1以前的值，而++a的值是加了1以后的值。</strong></p><table><thead><tr><th>表达式</th><th>运算</th><th>表达式的值</th></tr></thead><tbody><tr><td>count++</td><td>给count加1</td><td>count原来的值</td></tr><tr><td>++count</td><td>给count加1</td><td>count+1以后的值</td></tr><tr><td>count–</td><td>给count减1</td><td>count原来的值</td></tr><tr><td>–count</td><td>给count减1</td><td>count-1以后的值</td></tr></tbody></table><p><strong>关系运算：计算两个值之间的关系</strong></p><table><thead><tr><th align="center">运算符</th><th align="center">意义</th></tr></thead><tbody><tr><td align="center">==</td><td align="center">相等</td></tr><tr><td align="center">！=</td><td align="center">不相等</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&gt;=</td><td align="center">大于或等于</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td></tr><tr><td align="center">&lt;=</td><td align="center">小于或等于</td></tr></tbody></table><p><strong>关系运算的结果：当两个值的关系符合关系运算符的预期时，关系运算的结果为整数1，否则为整数0。</strong><br>关系运算符的<strong>优先级</strong>：所有的关系运算符的优先级<strong>比算数运算符的低</strong>，但是<strong>比赋值运算的高</strong>。==与！=的优先级比其他的低，而连续的关系运算是<strong>从左到右</strong>进行的。</p><p>if语句：如果表示条件的逻辑表达式的结果<strong>不是0</strong>，那么就执行后面跟着的大括号中的语句，否则就跳过这些语句不执行，而继续下面的其他语句。</p><p><strong>else总是和最近的那个if去匹配（不添加大括号的情况下）。</strong><br>良好的习惯：**在if或else后面总是用{}**（即使只有一条语句的时候）。</p><p>if-else常见的错误：忘了大括号；if后面加分号（C编译器不会认为凭空出现的大括号有问题！）；错误使用==和=（程序会出现warning!）；</p><p>switch-case语句</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">switch</span>(控制表达式) <span class="hljs-comment">//控制表达式只能是整数型的结果</span><br>&#123;                <span class="hljs-comment">//常量可以是常数，也可以是常数计算的表达式</span><br>   <span class="hljs-keyword">case</span> 常量:    <br>        语句   <br>        ....<br>   <span class="hljs-keyword">case</span> 常量:<br>        语句<br>        ....<br>   <span class="hljs-keyword">default</span>:<br>        语句<br>        ....<br>&#125;<br><span class="hljs-comment">//在执行完分支中的最后一条语句后，如果后面没有break,就会顺序执行到下面的case里去，直到遇到一个break或者switch结束为止。</span><br><span class="hljs-comment">//case只是一个入口，而没有将switch划分！</span><br></code></pre></td></tr></table></figure><p>编写代码尽量满足<strong>“单一出口”</strong>原则：一个函数里面只有末尾一个return（或者void函数完全没有return而在最后一个语句之后自动返回），中间没有其他的return语句。</p><p>while循环体内需要有改变条件的机会，否则将会成为死循环。<br>while翻译作“当”：当条件满足时，不断地重复循环体内的语句。（条件成立时循环继续的条件）</p><p>do-while循环（执行完一轮循环体的代码后，再来检查循环体的条件是否满足，如果满足则继续下一轮循环，不满足则结束循环）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">do</span><br>&#123;<br>    &lt;循环体语句&gt;<br>&#125;<span class="hljs-keyword">while</span>(&lt;循环条件&gt;);<br></code></pre></td></tr></table></figure><p>计数循环小套路：如果要模拟运行一个很大次数的循环，可以模拟较少的循环次数，然后作出推断。</p><p><strong>随机数：每次召唤rand（）就得到一个随机的整数。</strong></p><p>for(初始条件；循环继续的条件；循环每一轮要做的事情)<br>for=对于<br>for(count=10;count&gt;0;count–)<br>读作：“对于一开始的count=10,当count&gt;0时，重复做循环体，每一轮循环在做完循环体内语句后，使得count–。”<br>小套路：做求和的程序时，记录结果的变量应该初始化为0，而做求积的变量时，记录结果的变量应该初始化为1。<br>循环控制变量i只在循环里被使用了，在循环外面它没有任何用处。因此，我们可以把<strong>变量i的定义写到for语句里面去</strong>。（在C99里面用！）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)<br></code></pre></td></tr></table></figure><p>for中的每一个表达式都是可以<br><strong>for(;条件;)==while(条件)</strong></p><p><strong>Tips for loops:如果有固定次数，用for；如果必须执行一次，用do-while；其他情况用while</strong></p><p><strong>break：跳出循环</strong><br><strong>continue：跳过循环这一轮剩下的语句进入下一轮</strong><br>break和continue只能对它所在的那层循环做<br><strong>goto语句：无条件转移（不建议使用，只使用在多重循环结构中）</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">goto</span> out;<br>&lt;语句&gt;<br>out:<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>C语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>读书笔记-《经济学原理》</title>
    <link href="/2021/10/16/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E3%80%8A%E7%BB%8F%E6%B5%8E%E5%AD%A6%E5%8E%9F%E7%90%86%E3%80%8B/"/>
    <url>/2021/10/16/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E3%80%8A%E7%BB%8F%E6%B5%8E%E5%AD%A6%E5%8E%9F%E7%90%86%E3%80%8B/</url>
    
    <content type="html"><![CDATA[<p><strong>《经济学原理》-曼昆</strong></p><p>DAY1：2021年10月8日</p><h1 id="本书的总览"><a href="#本书的总览" class="headerlink" title="本书的总览"></a>本书的总览</h1><p><strong>导言部分（最基础的知识）</strong></p><p>第一章：“经济学十大原理”（经济学家的世界观，整个经济学的基础）主要介绍整本书中将出现的重要思想。</p><p>第二章：主要介绍经济学家如何研究他们的研究领域。1，假设在形成理论中的作用2，经济模型的概念3，经济学家在制定政策中的作用4，如何使用图形（包括被误用）</p><p>第三章：1，主要介绍比较优势理论（解释了为什么个人要与其邻居贸易，为什么一个国家要与其他国家贸易）2，市场力量如何协调许多个别的生产和消费决策3，为什么专业化，相互依赖和贸易会有利于每一个人。</p><p><strong>研究供求的工具</strong></p><p>第四章：主要介绍了供给曲线，需求曲线和市场均衡的概念。（供给与需求的市场力量）</p><p>第五章：弹性的概念（分析了三个事件）（弹性及其应用）</p><p>第六章：考察租金控制和最低工资法一类的价格控制，以及税收归宿（供给，需求与政府政策）</p><p>第七章：（消费者，生产者与市场效率）1，用消费者剩余和生产者剩余的概念扩大了供求分析2，消费者支付意愿和需求曲线之间的联系3，生产者生产成本和供给曲线之间的联系4，市场均衡使生产者和消费者剩余之和最大化5，了解市场配置的效率</p><p>第八，九章：实际应用“赋税的价值”（为什么税收引起无谓损失，什么决定了这种损失的大小），“国际贸易”（国际贸易的受益方和受损方，有关保护主义贸易政策的争论）</p><p><strong>微观经济学（较高深）</strong></p><p>为什么市场配置通常是合意的，政府如何改善市场配置。</p><p>第十章：“污染”这一类的外部效应如何会使市场结果无效率（外部性解释），无效率的解决方法（公开或私人）。</p><p>第十一章：“国防“这一类物品没有市场价值时产生的问题（公共物品和公共资源）。</p><p>第十二章：政府如何筹集支付公共物品所必需的收入。1，美国税制的制度背景2，效率和平等目标如何在设计税制时起作用</p><p>第十三章：介绍成本曲线，讨论了包括在企业成本中的内容——生产成本。</p><p>第十四章：介绍市场供给曲线，分析了价格接受企业的行为。</p><p>第十五章：1，讨论了作为市场上唯一卖者的企业的行为。2，讨论垄断定价的无效率，可能的政策反应和垄断者实行价格歧视的努力。（垄断）</p><p>第十六章：介绍只有几家卖家的市场，用囚徒模型解释战略相互作用。（寡头）</p><p>第十七章：1，考察有许多提供相似而不相同产品的卖者的市场行为。2，讨论了广告效果的争论。（垄断竞争）</p><p>第十八章：介绍要素价格与边际生产率之间的联系（生产要素市场）</p><p>第十九章：讨论了均衡工资的决定因素（补偿工资差别，人力资本和歧视）。</p><p>第二十章：1，考察了美国社会的不平等程度2，政府在改变收入分配中作用的不同观点3，帮助社会最贫困成员的各种政策。</p><p>第二十一章：用预算约束线和无差异曲线分析个人决策。</p><p>第二十二章：（微观经济学前言）介绍不对称信息，政治经济学和行为经济学。</p><p><strong>宏观经济学</strong></p><p>第二十三章：讨论国内生产总值和国名收入账户相关的统计数字的含义。</p><p>第二十四章：讨论消费物价指数的衡量与运用。</p><p>第二十五章：考察不同时期与不同国家生活水平差别巨大的决定因素。</p><p>第二十六章：讨论金融机构，考察这些机构在配置资源中的作用。</p><p>第二十七章：介绍现值，风险管理与资产评估。（基本金融工具）</p><p>第二十八章：考察失业率的长期决定因素。（寻找工作，最低工资法，工会的市场势力及效率工资）</p><p>第二十九章：介绍货币概念（经济学家角度），中央银行在控制货币量中的作用。</p><p>第三十章：介绍古典通货膨胀理论，讨论通货膨胀给社会带来的成本。</p><p>第三十一章：1，介绍储蓄，投资与贸易余额之间的关系2，名义和实际汇率之间的区别3，介绍购买力平价理论。</p><p>第三十二章：介绍古典国际物品与资本流动模型。（预算赤字与贸易赤字之间的联系，贸易政策的宏观经济影响）</p><p>第三十三章：介绍总需求与总供给模型。（根据有关经济周期的一些事实）</p><p>第三十四章：解释决策者如何可以移动总需求曲线（利用掌握的工具）。</p><p>第三十五章：1，解释为什么控制总需求的决策者面临通货膨胀与失业的权衡取舍关系2，为什么这种权衡取舍关系存在于短期中3，为什么它会最终消失。</p><p>第三十六章：宏观经济政策的五个争论问题1，政策积极主义的适当程度（对经济周期作出反应）2，规则与相机抉择之间的选择（运用货币政策）3，实现零通货膨胀的合意性4，政府预算平衡的重要性5，为鼓励储蓄进行税收改革的需要</p><p>我们为什么要学习经济学？</p><p>经济学有助于了解自己生活的世界，使个人更加精明的参与经济，还可以更好的理解经济政策的潜力与局限性。</p><p>DAY2：2021年10月9日</p><h1 id="第一章：经济学原理"><a href="#第一章：经济学原理" class="headerlink" title="第一章：经济学原理"></a>第一章：经济学原理</h1><p><strong>稀缺性</strong>：社会拥有的资源是有限的，因此不能生产人们希望拥有的所有物品与劳务。</p><p>经济学研究社会如何管理自己的稀缺资源。</p><p>原理一到四研究的是个人如何做出决策。</p><h2 id="原理一：人们面临权衡取舍"><a href="#原理一：人们面临权衡取舍" class="headerlink" title="原理一：人们面临权衡取舍"></a><strong>原理一：人们面临权衡取舍</strong></h2><p>做出决策要求我们在一个目标与另一个目标之间权衡取舍。</p><p>社会面临的权衡取舍是在效率与平等之间的。</p><p>效率是指社会能从其稀缺资源中得到的更多的东西（经济蛋糕的大小）。</p><p>平等是指将这些资源的成果公平地分配给社会成员（如何分割这块蛋糕）。</p><p>（政府想要把经济蛋糕切为更均等的小块时，这块蛋糕本身也就变小了。）</p><h2 id="原理二：某种东西的成本是为了得到它所放弃的东西"><a href="#原理二：某种东西的成本是为了得到它所放弃的东西" class="headerlink" title="原理二：某种东西的成本是为了得到它所放弃的东西"></a><strong>原理二：某种东西的成本是为了得到它所放弃的东西</strong></h2><p>做出决策就要比较可供选择的行动方案的成本与收益。（但某种行动的成本并不像乍看时那么明显）</p><p>一种东西的机会成本是为了得到这种东西所放弃的东西。</p><h2 id="原理三：理性人考虑边际量"><a href="#原理三：理性人考虑边际量" class="headerlink" title="原理三：理性人考虑边际量"></a><strong>原理三：理性人考虑边际量</strong></h2><p>边际变动：描述对现有行动的微小增量调整。（当考试临近时，我的决策不是在放弃考试或一天学习24个小时之间的选择，而是是否多花一小时复习功课而不是看电视）</p><p>人们通过考虑边际量（边际利益与边际成本）来做出最优决策</p><h2 id="原理四：人们会对激励做出反应"><a href="#原理四：人们会对激励做出反应" class="headerlink" title="原理四：人们会对激励做出反应"></a><strong>原理四：人们会对激励做出反应</strong></h2><p>许多政策改变了人们面临的成本或利益，从而改变了行为。</p><p>不仅应该考虑直接影响，而且还应该考虑通过激励发生的间接影响。</p><p>原理五到七研究的是人们如何相互交易</p><h2 id="原理五：贸易能使每个人状况更好"><a href="#原理五：贸易能使每个人状况更好" class="headerlink" title="原理五：贸易能使每个人状况更好"></a><strong>原理五：贸易能使每个人状况更好</strong></h2><p>贸易使每个人可以专门从事自己最擅长的活动。</p><p>通过与其他人交易，人们可以按较低的成本活获得各种各样的物品与劳务。</p><h2 id="原理六：市场通常是组织经济活动的一种好方法"><a href="#原理六：市场通常是组织经济活动的一种好方法" class="headerlink" title="原理六：市场通常是组织经济活动的一种好方法"></a><strong>原理六：市场通常是组织经济活动的一种好方法</strong></h2><p>市场经济：当许多企业和家庭在物品与劳务市场上相互交易时，通过他们的分散决策配置资源的经济。</p><p>价格就是看不见的手用来指引经济活动的工具。</p><p>价格既反映了一种物品的社会价值，也反映了生产该物品的社会成本。</p><p>重要推论：当政府阻止价格根据供求自发地调整时，它就限制了看不叫的手协调组成经济的千百万家庭和企业的能力。（中央计划经济）</p><p>DAY3：2021年10月10日</p><h2 id="原理七：政府有时可以改善市场效果"><a href="#原理七：政府有时可以改善市场效果" class="headerlink" title="原理七：政府有时可以改善市场效果"></a><strong>原理七：政府有时可以改善市场效果</strong></h2><p>看不见的手需要政府来保护它（只有产权得到保护，市场才能运行）</p><p>“经济参与者受利己所驱动，而市场中‘看不见的手’指引这种利己去促进一般社会福利“——斯密</p><p>政府干预经济的原因有两类：促进效率和促进平等。（大多数政策不是把经济蛋糕做大，而是改变蛋糕的分割）</p><p>市场失灵：市场本身不能有效配置资源的情况。市场失灵的可能原因是外部性和市场势力。</p><p>外部性：一个人的行为对旁观者福利的影响。</p><p>市场势力：一个经济活动者（或经济活动者的一个小集团）对市场价格有显著影响的能力。</p><p>看不见的手不能确保公平地分配经济成果。</p><p>市场经济根据人们生产其他人愿意买的东西的能力来给报酬。</p><p>政府有时可以改善市场结果并不意味着它总能这样。</p><p>原理八到十研究的是整体经济如何运行</p><h2 id="原理八：一国的生活水平取决于它生产物品与劳务的能力"><a href="#原理八：一国的生活水平取决于它生产物品与劳务的能力" class="headerlink" title="原理八：一国的生活水平取决于它生产物品与劳务的能力"></a><strong>原理八：一国的生活水平取决于它生产物品与劳务的能力</strong></h2><p>用生产率的差别解释各国和不同时期中生活水平的巨大差别。</p><p>一国的生产率增长率决定了平均收入增长率。</p><p>在考虑任何一项政策如何影响生活水平时，关键问题是这项政策如何影响我们生产物品与劳务的能力。</p><h2 id="原理九：当政府发行了过多货币时，物价上升"><a href="#原理九：当政府发行了过多货币时，物价上升" class="headerlink" title="原理九：当政府发行了过多货币时，物价上升"></a><strong>原理九：当政府发行了过多货币时，物价上升</strong></h2><p>通货膨胀：经济中物价总水平的上升</p><p>货币量的增加引起通货膨胀。</p><h2 id="原理十：社会面临通货膨胀与失业之间的短期权衡取舍"><a href="#原理十：社会面临通货膨胀与失业之间的短期权衡取舍" class="headerlink" title="原理十：社会面临通货膨胀与失业之间的短期权衡取舍"></a><strong>原理十：社会面临通货膨胀与失业之间的短期权衡取舍</strong></h2><p>增加经济中的货币量→通货膨胀和至少短期内降低失业水平。</p><p>菲利普斯曲线：通货膨胀与失业之间的短期权衡取舍</p><p>菲利普斯曲线有利于理解经济周期</p><p>决策者可以通过改变政府支出量，税收量和发行的货币量来影响经济所经历的通货膨胀与失业的组合。</p><p>DAY4：2021年10月16日</p><p>2021/11/16<br>一个月过去了，计划中道崩殂，因为数学课程的压力太大。</p>]]></content>
    
    
    
    <tags>
      
      <tag>经济学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>typora基础用法笔记</title>
    <link href="/2021/10/16/typora%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/10/16/typora%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="基础的使用语法"><a href="#基础的使用语法" class="headerlink" title="基础的使用语法"></a><strong>基础的使用语法</strong></h1><h2 id="段落与分割线"><a href="#段落与分割线" class="headerlink" title="段落与分割线"></a><strong>段落与分割线</strong></h2><p>使用enter直接切换到下一个段落，而使用shift+enter则切换到下一行(段与段的长度比行与行的长度长)<br>想要在段与段之间添加分割线可以使用***</p><hr><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a><strong>字体</strong></h2><p>加粗:文字前后分别添加”**”<br>斜体:文字前后分别添加” * “<br>删除线:文字前后添加”~~”</p><hr><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a><strong>标题</strong></h2><p>Markdown语法中的标题都是在文字面前使用”#”，前面有几个”#”就是几级标题(文字与#之间需保留空格)</p><hr><h2 id="块"><a href="#块" class="headerlink" title="块"></a><strong>块</strong></h2><p>代码块:将输入法切换至英文，输入”```”即可输入代码<br>公式块:使用快捷键ctrl+shift+M即可出现书写公式界面<br>引用块:将输入法切换为英文，输入符号&gt;再按下空格即可进入引用格式</p><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a><strong>表格</strong></h2><p>使用typora工具栏中的段落-表格可以自动生成一个表格，左上角的栏目可以用于表格的调试</p><table><thead><tr><th align="left"><strong>这是一个表格</strong></th></tr></thead><tbody><tr><td align="left"><strong>这是表格内容</strong></td></tr></tbody></table><hr><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a><strong>图片</strong></h2><p>直接使用 右键 - 复制 将网络图片、剪贴板图片复制到文档中<br>拖动本地图片到文档中<br>Typora 会自动帮你插入符合 Markdown 语法的图片语句，并给它加上标题<br>在 文件 - 偏好设置 - 编辑器 - 图像中可以设置图片保存的位置</p><hr><h2 id="打字机模式与专注模式"><a href="#打字机模式与专注模式" class="headerlink" title="打字机模式与专注模式"></a><strong>打字机模式与专注模式</strong></h2><p>打字机模式:使得你所编辑的那一行永远处于屏幕正中<br>专注模式:使你正在编辑的那一行保留颜色，而其他行的字体呈灰色</p><hr><h2 id="大纲-amp-文字侧边栏"><a href="#大纲-amp-文字侧边栏" class="headerlink" title="大纲&amp;文字侧边栏"></a><strong>大纲&amp;文字侧边栏</strong></h2><p>Typora 会根据你 Markdown 标记的 H1、H2、H3…… 各级标题为你呈现一个大纲。</p><hr><h1 id="进阶的使用方法–添加插件"><a href="#进阶的使用方法–添加插件" class="headerlink" title="进阶的使用方法–添加插件"></a>进阶的使用方法–添加插件</h1><p>–随缘更新……</p><hr><blockquote><p><a href="https://www.typora.net/support/">支持 | typora中文网</a><br><a href="https://www.typora.net/1736.html">Typora使用方法教程 | typora中文网</a></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网站更新日志2021/10/16</title>
    <link href="/2021/10/16/%E7%BD%91%E7%AB%99%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%972021-10-16/"/>
    <url>/2021/10/16/%E7%BD%91%E7%AB%99%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%972021-10-16/</url>
    
    <content type="html"><![CDATA[<p>/将网站的主题从next更换为了fluid<br>/添加了页面图片<br>/添加了”about”页面更多的信息<br>/持续学习markdown文件编译技术，选择使用typora编译器</p>]]></content>
    
    
    
    <tags>
      
      <tag>更新</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一篇博客</title>
    <link href="/2021/10/15/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/10/15/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>这是我创建的第一个个人博客，内容应该不会太多。<br>在这里简要的说明一下，我目前还在学习大一基础课程中的程序设计，使用的是C语言编程工具。（菜鸟实锤）<br>建立个人博客主要是兴趣爱好使然，也是想记录分享下自己的学习，生活。（学Web前端技术也是为了能找口饭吃，，，）<br>下面简要的谈谈未来的工作：(学习进度会进行归纳整理并发布）<br>1，熟练应用MarkDown编译器（最基本的文章编写能力）<br>2，熟练规划设计hexo网站（页面美化，标签分类等）<br>3，不停的学习计算机技术！（在保障不挂科的情况下)<br>今天（15号）有幸得到某位大牛的指导：成为大佬很简单，不喊累，再加上强劲的执行力即可。    </p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
